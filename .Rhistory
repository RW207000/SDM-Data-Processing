packages <- c("tidyverse", "readxl", "dplyr", "magrittr", "mixtools", "emmeans", "readr","data.table", "lubridate", "ggplot2", "magrittr", "skimr", "ggstatsplot","summarytools", "knitr", "here", "ggthemes", "ggthemes", "Amelia", "tidyr", "naniar", "stringr", "janitor", "readxl")
lapply(packages, library, character.only = TRUE)
participants <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Longitudinal data 24.02.2025.csv",header=T, na.strings="")
participants$Date.of.Assessment <- as.Date(participants$Date.of.Assessment, format = "%d/%m/%Y")
medication <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Glucocorticoids Data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
medication <- remove_empty(medication, c("cols"), cutoff = 1)
labs <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Labs data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
labs$Date <- as.Date(labs$Date, format = "%d/%m/%Y")
participants$coid_assedate <- paste(participants$CO.ID, participants$Date.of.Assessment, sep = " ")
duplicates <- freq(participants$coid_assedate)
duplicatesframe <- as.data.frame(duplicates)
duplicatesframe <- rownames_to_column(duplicatesframe, var="idvisitdate")
duplicatesframe <- duplicatesframe[duplicatesframe$idvisitdate != c("Total", "<NA>"),]
duplicatesframe <- duplicatesframe[-c(3:6)]
duplicateassessments <- duplicatesframe %>%
filter(Freq>1)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
# freqcheck
toremove <- duplicateassessments$idvisitdate
removedrecords <- subset(participants, coid_assedate %in% toremove)
write.csv(removedrecords, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/removed_records", row.names = F)
duplicateassessments$id <- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 1)
duplicateassessments$visitdate<- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 2)
toremovelostparticipants <- participantsnoduplicates$CO.ID
lostparticipants <- NA
lostparticipants <- subset(participants, !CO.ID %in% toremovelostparticipants)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
medication_clean <- medication
medication_clean$coid_asse_id <- paste(medication_clean$CO.ID, medication_clean$Assessment.ID)
assessment_dates <- select(participantsnoduplicates, c("Assessment.ID", "Date.of.Assessment"))
medication_clean <- left_join(medication_clean, assessment_dates, by = "Assessment.ID")
medication_clean$Date.of.Assessment <- as.Date(medication_clean$Date.of.Assessment, format = "%d/%m/%Y")
print("Let's see which units have been used:")
table(medication_clean$Unit)
# identify entries which used anomalous units
units_mcg <- subset(medication_clean, Unit == "mcg")
#correct the dose value by /1000 (mcg to mg)
medication_clean$Dose <-
ifelse(medication_clean$Unit == "mcg",
as.numeric(medication_clean$Dose) / 1000,
as.numeric(medication_clean$Dose))
#correct the unit name (also include the NULL units here) - MIGHT WANT TO REMOVE THIS TO ALLOW QUALITY CHECKING LATER - MAYBE SOME ENTRIES INCLUDE MCG VALUES BUT SAY THEY'RE MG...
medication_clean$Unit <-
ifelse(medication_clean$Unit == "mcg" | medication_clean$Unit == "NULL",
as.character("mg"),
as.character(medication_clean$Unit))
#checking that all units are the same (mcg)
table(medication_clean$Unit)
medication_clean$Medicine <-
ifelse(medication_clean$Note == "0fmody", (as.character("Efmody")), medication_clean$Medicine)
prednisoloneratio <- 5
dexamethasoneratio <- 80
medication_clean$HC_equivalent_dose <- NA
medication_clean$HC_equivalent_dose <- as.character(medication_clean$HC_equivalent_dose)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Hydrocortisone" | medication_clean$Medicine == "Efmody", medication_clean$Dose, NA)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Prednisolone", (as.numeric(medication_clean$Dose) * prednisoloneratio), medication_clean$HC_equivalent_dose)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Dexamethasone", (as.numeric(medication_clean$Dose) * dexamethasoneratio), medication_clean$HC_equivalent_dose)
# medication_clean$HC_equivalent_dose <-
#   ifelse(medication_clean$Medicine == "Other", medication_clean$Dose, NA)
# Let's do it first using individual doses
checkmedstats <- medication_clean %>%
group_by(Medicine) %>%
summarise(mean_dose = mean(HC_equivalent_dose, na.rm = TRUE),
median_dose = median(HC_equivalent_dose, na.rm = TRUE),
sd_dose = sd(HC_equivalent_dose, na.rm = TRUE),
min_dose = min(HC_equivalent_dose, na.rm = TRUE),
max_dose = max(HC_equivalent_dose, na.rm = TRUE)) %>%
mutate_if(is.numeric, ~round(., 2))
# Now let's do it for total_daily_doses
medperpatient <- medication_clean %>%
group_by(Assessment.ID) %>%
summarise(total_standardised_daily_dose_1 = sum(HC_equivalent_dose, na.rm = TRUE))
medication_clean <- full_join(medication_clean, medperpatient, by = "Assessment.ID")
checkdailymedstats <- medication_clean %>%
group_by(Medicine) %>%
summarise(mean_standardised_dose = mean(total_standardised_daily_dose_1, na.rm = TRUE),
median_standardised_dose = median(total_standardised_daily_dose_1, na.rm = TRUE),
sd_standardised_dose = sd(total_standardised_daily_dose_1, na.rm = TRUE),
min_standardised_dose = min(total_standardised_daily_dose_1, na.rm = TRUE),
max_standardised_dose = max(total_standardised_daily_dose_1, na.rm = TRUE)) %>%
mutate_if(is.numeric, ~round(., 2))
View(checkdailymedstats)
medication_clean$Time <- ifelse(medication_clean$Time !=0, as.numeric(medication_clean$Time),NA)
medication_clean$Time <- as.numeric(medication_clean$Time / 3600)
medication_clean$Time <- round(medication_clean$Time, digits = 2)
knitr::opts_chunk$set(echo = TRUE)
packages <- c("tidyverse", "readxl", "dplyr", "magrittr", "mixtools", "emmeans", "readr","data.table", "lubridate", "ggplot2", "magrittr", "skimr", "ggstatsplot","summarytools", "knitr", "here", "ggthemes", "ggthemes", "Amelia", "tidyr", "naniar", "stringr", "janitor", "readxl")
lapply(packages, library, character.only = TRUE)
participants <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Longitudinal data 24.02.2025.csv",header=T, na.strings="")
participants$Date.of.Assessment <- as.Date(participants$Date.of.Assessment, format = "%d/%m/%Y")
medication <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Glucocorticoids Data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
medication <- remove_empty(medication, c("cols"), cutoff = 1)
labs <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Labs data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
labs$Date <- as.Date(labs$Date, format = "%d/%m/%Y")
participants$coid_assedate <- paste(participants$CO.ID, participants$Date.of.Assessment, sep = " ")
duplicates <- freq(participants$coid_assedate)
duplicatesframe <- as.data.frame(duplicates)
duplicatesframe <- rownames_to_column(duplicatesframe, var="idvisitdate")
duplicatesframe <- duplicatesframe[duplicatesframe$idvisitdate != c("Total", "<NA>"),]
duplicatesframe <- duplicatesframe[-c(3:6)]
duplicateassessments <- duplicatesframe %>%
filter(Freq>1)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
# freqcheck
toremove <- duplicateassessments$idvisitdate
removedrecords <- subset(participants, coid_assedate %in% toremove)
write.csv(removedrecords, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/removed_records", row.names = F)
duplicateassessments$id <- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 1)
duplicateassessments$visitdate<- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 2)
toremovelostparticipants <- participantsnoduplicates$CO.ID
lostparticipants <- NA
lostparticipants <- subset(participants, !CO.ID %in% toremovelostparticipants)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
medication_clean <- medication
medication_clean$coid_asse_id <- paste(medication_clean$CO.ID, medication_clean$Assessment.ID)
assessment_dates <- select(participantsnoduplicates, c("Assessment.ID", "Date.of.Assessment"))
medication_clean <- left_join(medication_clean, assessment_dates, by = "Assessment.ID")
medication_clean$Date.of.Assessment <- as.Date(medication_clean$Date.of.Assessment, format = "%d/%m/%Y")
print("Let's see which units have been used:")
table(medication_clean$Unit)
# identify entries which used anomalous units
units_mcg <- subset(medication_clean, Unit == "mcg")
#correct the dose value by /1000 (mcg to mg)
medication_clean$Dose <-
ifelse(medication_clean$Unit == "mcg",
as.numeric(medication_clean$Dose) / 1000,
as.numeric(medication_clean$Dose))
#correct the unit name (also include the NULL units here) - MIGHT WANT TO REMOVE THIS TO ALLOW QUALITY CHECKING LATER - MAYBE SOME ENTRIES INCLUDE MCG VALUES BUT SAY THEY'RE MG...
medication_clean$Unit <-
ifelse(medication_clean$Unit == "mcg" | medication_clean$Unit == "NULL",
as.character("mg"),
as.character(medication_clean$Unit))
#checking that all units are the same (mcg)
table(medication_clean$Unit)
medication_clean$Medicine <-
ifelse(medication_clean$Note == "0fmody", (as.character("Efmody")), medication_clean$Medicine)
prednisoloneratio <- 5
dexamethasoneratio <- 80
medication_clean$HC_equivalent_dose <- NA
medication_clean$HC_equivalent_dose <- as.character(medication_clean$HC_equivalent_dose)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Hydrocortisone" | medication_clean$Medicine == "Efmody", medication_clean$Dose, NA)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Prednisolone", (as.numeric(medication_clean$Dose) * prednisoloneratio), medication_clean$HC_equivalent_dose)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Dexamethasone", (as.numeric(medication_clean$Dose) * dexamethasoneratio), medication_clean$HC_equivalent_dose)
# medication_clean$HC_equivalent_dose <-
#   ifelse(medication_clean$Medicine == "Other", medication_clean$Dose, NA)
# Let's do it first using individual doses
checkmedstats <- medication_clean %>%
group_by(Medicine) %>%
summarise(mean_dose = mean(HC_equivalent_dose, na.rm = TRUE),
median_dose = median(HC_equivalent_dose, na.rm = TRUE),
sd_dose = sd(HC_equivalent_dose, na.rm = TRUE),
min_dose = min(HC_equivalent_dose, na.rm = TRUE),
max_dose = max(HC_equivalent_dose, na.rm = TRUE)) %>%
mutate_if(is.numeric, ~round(., 2))
# Now let's do it for total_daily_doses
medperpatient <- medication_clean %>%
group_by(Assessment.ID) %>%
summarise(total_standardised_daily_dose_1 = sum(HC_equivalent_dose, na.rm = TRUE))
medication_clean <- full_join(medication_clean, medperpatient, by = "Assessment.ID")
checkdailymedstats <- medication_clean %>%
group_by(Medicine) %>%
summarise(mean_standardised_dose = mean(total_standardised_daily_dose_1, na.rm = TRUE),
median_standardised_dose = median(total_standardised_daily_dose_1, na.rm = TRUE),
sd_standardised_dose = sd(total_standardised_daily_dose_1, na.rm = TRUE),
min_standardised_dose = min(total_standardised_daily_dose_1, na.rm = TRUE),
max_standardised_dose = max(total_standardised_daily_dose_1, na.rm = TRUE)) %>%
mutate_if(is.numeric, ~round(., 2))
medication_clean$Time <- ifelse(medication_clean$Time !=0, as.numeric(medication_clean$Time),NA)
medication_clean$Time <- as.numeric(medication_clean$Time / 3600)
medication_clean$Time <- round(medication_clean$Time, digits = 2)
medication_clean$assessment_entry <-
ave(medication_clean$CO.ID,
medication_clean$Assessment.ID,
FUN = seq_along)
totalmed_1st_entry <-
medication_clean %>%
filter(assessment_entry==1)
totalmed_2nd_entry <-
medication_clean %>%
filter(assessment_entry==2)
totalmed_3rd_entry <-
medication_clean %>%
filter(assessment_entry==3)
totalmed_4th_entry <-
medication_clean %>%
filter(assessment_entry==4)
totalmed_5th_entry <-
medication_clean %>%
filter(assessment_entry==5)
totalmed_6th_entry <-
medication_clean %>%
filter(assessment_entry==6)
#now we can get rid of the assessment entry column
# medication$assessment_entry <- NULL
totalmed_1st_entry$assessment_entry <- NULL
totalmed_2nd_entry$assessment_entry <- NULL
totalmed_3rd_entry$assessment_entry <- NULL
totalmed_4th_entry$assessment_entry <- NULL
totalmed_5th_entry$assessment_entry <- NULL
totalmed_6th_entry$assessment_entry <- NULL
#then add the appropriate suffix based on the assessment_entry number to each column in these frames to make them different before joining
colnames(totalmed_1st_entry) <-
paste(colnames(totalmed_1st_entry), 1, sep="_")
colnames(totalmed_2nd_entry) <-
paste(colnames(totalmed_2nd_entry), 2, sep="_")
colnames(totalmed_3rd_entry) <-
paste(colnames(totalmed_3rd_entry), 3, sep="_")
colnames(totalmed_4th_entry) <-
paste(colnames(totalmed_4th_entry), 4, sep="_")
colnames(totalmed_5th_entry) <-
paste(colnames(totalmed_5th_entry), 5, sep="_")
colnames(totalmed_6th_entry) <-
paste(colnames(totalmed_6th_entry), 6, sep="_")
totalmed_1st_entry <- totalmed_1st_entry %>%
rename("CO.ID" = "CO.ID_1",
"Assessment.ID" = "Assessment.ID_1")
totalmed_2nd_entry <- totalmed_2nd_entry %>%
rename("CO.ID" = "CO.ID_2",
"Assessment.ID" = "Assessment.ID_2")
totalmed_3rd_entry <- totalmed_3rd_entry %>%
rename("CO.ID" = "CO.ID_3",
"Assessment.ID" = "Assessment.ID_3")
totalmed_4th_entry <- totalmed_4th_entry %>%
rename("CO.ID" = "CO.ID_4",
"Assessment.ID" = "Assessment.ID_4")
totalmed_5th_entry <- totalmed_5th_entry %>%
rename("CO.ID" = "CO.ID_5",
"Assessment.ID" = "Assessment.ID_5")
totalmed_6th_entry <- totalmed_6th_entry %>%
rename("CO.ID" = "CO.ID_6",
"Assessment.ID" = "Assessment.ID_6")
meds_wide <- totalmed_1st_entry %>%
left_join(totalmed_2nd_entry, by=c("CO.ID", "Assessment.ID")) %>%
left_join(totalmed_3rd_entry, by=c("CO.ID", "Assessment.ID")) %>%
left_join(totalmed_4th_entry, by=c("CO.ID", "Assessment.ID")) %>%
left_join(totalmed_5th_entry, by=c("CO.ID", "Assessment.ID")) %>%
left_join(totalmed_6th_entry, by=c("CO.ID", "Assessment.ID"))
#add in 'total daily dose' from 'medperpatient' to meds_wide
totaldailyformedswide <- select(medperpatient, c("Assessment.ID", "total_standardised_daily_dose_1"))
meds_wide <- meds_wide %>%
left_join(select(medperpatient, Assessment.ID, total_standardised_daily_dose_1), by = "Assessment.ID")
meds_wide <- meds_wide %>%
select_if(function(x) !all(is.na(x)))
# write.csv(meds_wide, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/meds_wide.csv", row.names = F)
remove(totalmed_1st_entry, totalmed_2nd_entry, totalmed_3rd_entry, totalmed_4th_entry, totalmed_5th_entry, totalmed_6th_entry)
medperpatient$number_of_doses <- medication_clean %>%
group_by(Assessment.ID) %>%
summarise(max(assessment_entry))
patient_medicine <- select(meds_wide, c("Assessment.ID", "Medicine_1"))
patient_w_h <- select(participantsnoduplicates, c("Assessment.ID", "Weight..kg.", "Height..cm."))
absolute_med_values <- select(meds_wide, )
medperpatient <- left_join(medperpatient, patient_medicine, by = "Assessment.ID")
medperpatient <- left_join(medperpatient, patient_w_h, join_by("Assessment.ID" == "Assessment.ID"))
# write.csv(medperpatient, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/medperpatient.csv", row.names = F)
View(medperpatient)
valuesdrop <- c("Result", "Time")
labsvalues <- labs[, !names(labs) %in% valuesdrop]
labsvalues <- labsvalues %>%
pivot_wider(names_from = "Type",
values_from = "Value")
interpdrop <- c("Value", "Time")
labsinterp <- labs[, !names(labs) %in% interpdrop]
labsinterp <- labsinterp %>%
pivot_wider(names_from = "Type",
values_from = "Result")
labs_wide <- left_join(labsvalues, labsinterp, by = c("CO.ID", "Assessment.ID", "Date"))
names(labs_wide) <- gsub(x = names(labs_wide), pattern = ".x",
replacement = ".value")
names(labs_wide) <- gsub(x = names(labs_wide), pattern = ".y",
replacement = ".interpretation")
knitr::opts_chunk$set(echo = TRUE)
packages <- c("tidyverse", "readxl", "dplyr", "magrittr", "mixtools", "emmeans", "readr","data.table", "lubridate", "ggplot2", "magrittr", "skimr", "ggstatsplot","summarytools", "knitr", "here", "ggthemes", "ggthemes", "Amelia", "tidyr", "naniar", "stringr", "janitor", "readxl")
lapply(packages, library, character.only = TRUE)
participants <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Longitudinal data 24.02.2025.csv",header=T, na.strings="")
participants$Date.of.Assessment <- as.Date(participants$Date.of.Assessment, format = "%d/%m/%Y")
medication <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Glucocorticoids Data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
medication <- remove_empty(medication, c("cols"), cutoff = 1)
labs <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Labs data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
labs$Date <- as.Date(labs$Date, format = "%d/%m/%Y")
participants$coid_assedate <- paste(participants$CO.ID, participants$Date.of.Assessment, sep = " ")
duplicates <- freq(participants$coid_assedate)
duplicatesframe <- as.data.frame(duplicates)
duplicatesframe <- rownames_to_column(duplicatesframe, var="idvisitdate")
duplicatesframe <- duplicatesframe[duplicatesframe$idvisitdate != c("Total", "<NA>"),]
duplicatesframe <- duplicatesframe[-c(3:6)]
duplicateassessments <- duplicatesframe %>%
filter(Freq>1)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
# freqcheck
toremove <- duplicateassessments$idvisitdate
removedrecords <- subset(participants, coid_assedate %in% toremove)
write.csv(removedrecords, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/removed_records", row.names = F)
duplicateassessments$id <- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 1)
duplicateassessments$visitdate<- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 2)
toremovelostparticipants <- participantsnoduplicates$CO.ID
lostparticipants <- NA
lostparticipants <- subset(participants, !CO.ID %in% toremovelostparticipants)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
medication_clean <- medication
medication_clean$coid_asse_id <- paste(medication_clean$CO.ID, medication_clean$Assessment.ID)
mean(medication_clean$Time)
medication_clean <- medication
medication_clean$coid_asse_id <- paste(medication_clean$CO.ID, medication_clean$Assessment.ID)
assessment_dates <- select(participantsnoduplicates, c("Assessment.ID", "Date.of.Assessment"))
medication_clean <- left_join(medication_clean, assessment_dates, by = "Assessment.ID")
medication_clean$Date.of.Assessment <- as.Date(medication_clean$Date.of.Assessment, format = "%d/%m/%Y")
medication_clean$hours_through_day <- as.numeric(medication_clean$time / 3600)
# time as time not numeric
medication_clean$Time <- as.numeric(medication_clean$Time / 3600)
View(medication)
# add in HCe values
medication_clean$HC_equivalent_dose <- NA
knitr::opts_chunk$set(echo = TRUE)
packages <- c("tidyverse", "readxl", "dplyr", "magrittr", "mixtools", "emmeans", "readr","data.table", "lubridate", "ggplot2", "magrittr", "skimr", "ggstatsplot","summarytools", "knitr", "here", "ggthemes", "ggthemes", "Amelia", "tidyr", "naniar", "stringr", "janitor", "readxl")
lapply(packages, library, character.only = TRUE)
participants <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Longitudinal data 24.02.2025.csv",header=T, na.strings="")
participants$Date.of.Assessment <- as.Date(participants$Date.of.Assessment, format = "%d/%m/%Y")
medication <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Glucocorticoids Data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
medication <- remove_empty(medication, c("cols"), cutoff = 1)
labs <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Labs data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
labs$Date <- as.Date(labs$Date, format = "%d/%m/%Y")
participants$coid_assedate <- paste(participants$CO.ID, participants$Date.of.Assessment, sep = " ")
duplicates <- freq(participants$coid_assedate)
duplicatesframe <- as.data.frame(duplicates)
duplicatesframe <- rownames_to_column(duplicatesframe, var="idvisitdate")
duplicatesframe <- duplicatesframe[duplicatesframe$idvisitdate != c("Total", "<NA>"),]
duplicatesframe <- duplicatesframe[-c(3:6)]
duplicateassessments <- duplicatesframe %>%
filter(Freq>1)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
# freqcheck
toremove <- duplicateassessments$idvisitdate
removedrecords <- subset(participants, coid_assedate %in% toremove)
write.csv(removedrecords, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/removed_records", row.names = F)
duplicateassessments$id <- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 1)
duplicateassessments$visitdate<- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 2)
toremovelostparticipants <- participantsnoduplicates$CO.ID
lostparticipants <- NA
lostparticipants <- subset(participants, !CO.ID %in% toremovelostparticipants)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
medication_clean <- medication
medication_clean$coid_asse_id <- paste(medication_clean$CO.ID, medication_clean$Assessment.ID)
# adding assessment date to medication frame
assessment_dates <- select(participantsnoduplicates, c("Assessment.ID", "Date.of.Assessment"))
medication_clean <- left_join(medication_clean, assessment_dates, by = "Assessment.ID")
medication_clean$Date.of.Assessment <- as.Date(medication_clean$Date.of.Assessment, format = "%d/%m/%Y")
print("Let's see which units have been used:")
table(medication_clean$Unit)
# identify entries which used anomalous units
units_mcg <- subset(medication_clean, Unit == "mcg")
#correct the dose value by /1000 (mcg to mg)
medication_clean$Dose <-
ifelse(medication_clean$Unit == "mcg",
as.numeric(medication_clean$Dose) / 1000,
as.numeric(medication_clean$Dose))
#correct the unit name (also include the NULL units here) - MIGHT WANT TO REMOVE THIS TO ALLOW QUALITY CHECKING LATER - MAYBE SOME ENTRIES INCLUDE MCG VALUES BUT SAY THEY'RE MG...
medication_clean$Unit <-
ifelse(medication_clean$Unit == "mcg" | medication_clean$Unit == "NULL",
as.character("mg"),
as.character(medication_clean$Unit))
#checking that all units are the same (mcg)
table(medication_clean$Unit)
# writing Efmody in Medicine column where it is written in Note column
medication_clean$Medicine <-
ifelse(medication_clean$Note == "0fmody", (as.character("Efmody")), medication_clean$Medicine)
# HCe ratios
prednisoloneratio <- 5
dexamethasoneratio <- 80
# add in HCe values
medication_clean$HC_equivalent_dose <- NA
medication_clean$HC_equivalent_dose <- as.character(medication_clean$HC_equivalent_dose)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Hydrocortisone" | medication_clean$Medicine == "Efmody", medication_clean$Dose, NA)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Prednisolone", (as.numeric(medication_clean$Dose) * prednisoloneratio), medication_clean$HC_equivalent_dose)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Dexamethasone", (as.numeric(medication_clean$Dose) * dexamethasoneratio), medication_clean$HC_equivalent_dose)
# medication_clean$HC_equivalent_dose <-
#   ifelse(medication_clean$Medicine == "Other", medication_clean$Dose, NA)
medication_clean$Time <- ifelse(medication_clean$Time !=0, as.numeric(medication_clean$Time),NA)
medication_clean$Time <- as.numeric(medication_clean$Time / 3600)
medication_clean$Time <- round(medication_clean$Time, digits = 2)
knitr::opts_chunk$set(echo = TRUE)
packages <- c("tidyverse", "readxl", "dplyr", "magrittr", "mixtools", "emmeans", "readr","data.table", "lubridate", "ggplot2", "magrittr", "skimr", "ggstatsplot","summarytools", "knitr", "here", "ggthemes", "ggthemes", "Amelia", "tidyr", "naniar", "stringr", "janitor", "readxl")
lapply(packages, library, character.only = TRUE)
participants <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Longitudinal data 24.02.2025.csv",header=T, na.strings="")
participants$Date.of.Assessment <- as.Date(participants$Date.of.Assessment, format = "%d/%m/%Y")
medication <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Glucocorticoids Data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
medication <- remove_empty(medication, c("cols"), cutoff = 1)
labs <- read.csv("Data/1 Registry extracts/Feb 25 Extract/Labs data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
labs$Date <- as.Date(labs$Date, format = "%d/%m/%Y")
participants$coid_assedate <- paste(participants$CO.ID, participants$Date.of.Assessment, sep = " ")
duplicates <- freq(participants$coid_assedate)
duplicatesframe <- as.data.frame(duplicates)
duplicatesframe <- rownames_to_column(duplicatesframe, var="idvisitdate")
duplicatesframe <- duplicatesframe[duplicatesframe$idvisitdate != c("Total", "<NA>"),]
duplicatesframe <- duplicatesframe[-c(3:6)]
duplicateassessments <- duplicatesframe %>%
filter(Freq>1)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
# freqcheck
toremove <- duplicateassessments$idvisitdate
removedrecords <- subset(participants, coid_assedate %in% toremove)
write.csv(removedrecords, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/removed_records", row.names = F)
duplicateassessments$id <- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 1)
duplicateassessments$visitdate<- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 2)
toremovelostparticipants <- participantsnoduplicates$CO.ID
lostparticipants <- NA
lostparticipants <- subset(participants, !CO.ID %in% toremovelostparticipants)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
print("Let's see which units have been used:")
table(medication_clean$Unit)
# identify entries which used anomalous units
units_mcg <- subset(medication_clean, Unit == "mcg")
#correct the dose value by /1000 (mcg to mg)
medication_clean$Dose <-
ifelse(medication_clean$Unit == "mcg",
as.numeric(medication_clean$Dose) / 1000,
as.numeric(medication_clean$Dose))
#correct the unit name (also include the NULL units here) - MIGHT WANT TO REMOVE THIS TO ALLOW QUALITY CHECKING LATER - MAYBE SOME ENTRIES INCLUDE MCG VALUES BUT SAY THEY'RE MG...
medication_clean$Unit <-
ifelse(medication_clean$Unit == "mcg" | medication_clean$Unit == "NULL",
as.character("mg"),
as.character(medication_clean$Unit))
#checking that all units are the same (mcg)
table(medication_clean$Unit)
# writing Efmody in Medicine column where it is written in Note column
medication_clean$Medicine <-
ifelse(medication_clean$Note == "0fmody", (as.character("Efmody")), medication_clean$Medicine)
# HCe ratios
prednisoloneratio <- 5
dexamethasoneratio <- 80
# add in HCe values
medication_clean$HC_equivalent_dose <- NA
medication_clean$HC_equivalent_dose <- as.character(medication_clean$HC_equivalent_dose)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Hydrocortisone" | medication_clean$Medicine == "Efmody", medication_clean$Dose, NA)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Prednisolone", (as.numeric(medication_clean$Dose) * prednisoloneratio), medication_clean$HC_equivalent_dose)
medication_clean$HC_equivalent_dose <-
ifelse(medication_clean$Medicine == "Dexamethasone", (as.numeric(medication_clean$Dose) * dexamethasoneratio), medication_clean$HC_equivalent_dose)
# Let's do it first using individual doses
checkmedstats <- medication_clean %>%
group_by(Medicine) %>%
summarise(mean_dose = mean(HC_equivalent_dose, na.rm = TRUE),
median_dose = median(HC_equivalent_dose, na.rm = TRUE),
sd_dose = sd(HC_equivalent_dose, na.rm = TRUE),
min_dose = min(HC_equivalent_dose, na.rm = TRUE),
max_dose = max(HC_equivalent_dose, na.rm = TRUE)) %>%
mutate_if(is.numeric, ~round(., 2))
# Now let's do it for total_daily_doses
medperpatient <- medication_clean %>%
group_by(Assessment.ID) %>%
summarise(total_standardised_daily_dose_1 = sum(HC_equivalent_dose, na.rm = TRUE))
medication_clean <- full_join(medication_clean, medperpatient, by = "Assessment.ID")
checkdailymedstats <- medication_clean %>%
group_by(Medicine) %>%
summarise(mean_standardised_dose = mean(total_standardised_daily_dose_1, na.rm = TRUE),
median_standardised_dose = median(total_standardised_daily_dose_1, na.rm = TRUE),
sd_standardised_dose = sd(total_standardised_daily_dose_1, na.rm = TRUE),
min_standardised_dose = min(total_standardised_daily_dose_1, na.rm = TRUE),
max_standardised_dose = max(total_standardised_daily_dose_1, na.rm = TRUE)) %>%
mutate_if(is.numeric, ~round(., 2))
medication_clean$Time <- ifelse(medication_clean$Time !=0, as.numeric(medication_clean$Time),NA)
medication_clean$Time <- as.numeric(medication_clean$Time / 3600)
medication_clean$Time <- round(medication_clean$Time, digits = 2)
